# Generated by Django 5.1.4 on 2025-10-30 22:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Calculated percentage grade', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('letter_grade', models.CharField(blank=True, help_text='Letter grade (A, B+, C-, etc.)', max_length=3)),
                ('is_overridden', models.BooleanField(default=False, help_text='Has been manually overridden by instructor')),
                ('override_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Manual override percentage', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('override_letter', models.CharField(blank=True, help_text='Manual override letter grade', max_length=3)),
                ('override_reason', models.TextField(blank=True, help_text='Reason for grade override')),
                ('overridden_at', models.DateTimeField(blank=True, help_text='When the override was made', null=True)),
                ('last_calculated', models.DateTimeField(auto_now=True, help_text='When grade was last calculated')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enrollment', models.OneToOneField(help_text='Enrollment this grade is for', on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='courses.enrollment')),
                ('overridden_by', models.ForeignKey(blank=True, help_text='Instructor who made the override', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grade_overrides', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course Grade',
                'verbose_name_plural': 'Course Grades',
                'ordering': ['-percentage'],
            },
        ),
        migrations.CreateModel(
            name='GradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('CALCULATED', 'Automatic Calculation'), ('OVERRIDE', 'Manual Override'), ('REMOVED', 'Override Removed')], help_text='Type of change', max_length=20)),
                ('old_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('new_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('old_letter', models.CharField(blank=True, max_length=3)),
                ('new_letter', models.CharField(blank=True, max_length=3)),
                ('reason', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(help_text='User who made the change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grade_changes', to=settings.AUTH_USER_MODEL)),
                ('course_grade', models.ForeignKey(help_text='Course grade this history entry is for', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='grades.coursegrade')),
            ],
            options={
                'verbose_name': 'Grade History',
                'verbose_name_plural': 'Grade Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_min', models.DecimalField(decimal_places=2, default=90.0, help_text='Minimum percentage for A grade', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('b_min', models.DecimalField(decimal_places=2, default=80.0, help_text='Minimum percentage for B grade', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('c_min', models.DecimalField(decimal_places=2, default=70.0, help_text='Minimum percentage for C grade', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('d_min', models.DecimalField(decimal_places=2, default=60.0, help_text='Minimum percentage for D grade', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('use_plus_minus', models.BooleanField(default=False, help_text='Use +/- modifiers (A+, A, A-)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.OneToOneField(help_text='Course this grade scale applies to', on_delete=django.db.models.deletion.CASCADE, related_name='grade_scale', to='courses.course')),
            ],
            options={
                'verbose_name': 'Grade Scale',
                'verbose_name_plural': 'Grade Scales',
            },
        ),
        migrations.CreateModel(
            name='GradeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name (e.g., Homework, Quizzes)', max_length=100)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight as percentage of final grade', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('drop_lowest', models.PositiveIntegerField(default=0, help_text='Number of lowest scores to drop')),
                ('assignment_type', models.CharField(help_text='Maps to Assignment.assignment_type', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(help_text='Course this category belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='grade_categories', to='courses.course')),
            ],
            options={
                'verbose_name': 'Grade Category',
                'verbose_name_plural': 'Grade Categories',
                'ordering': ['-weight'],
                'unique_together': {('course', 'assignment_type')},
            },
        ),
    ]
